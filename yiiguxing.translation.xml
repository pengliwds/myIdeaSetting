<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="769" />
    <option name="newTranslationDialogY" value="504" />
    <histories>
      <item value="Note that readers for specific bean definition formats are typically implemented separately rather than as bean factory subclasses:" />
      <item value="Can be used as a standalone bean factory, or as a superclass for custom bean factories. Note that readers for specific bean definition formats are typically implemented separately rather than as bean factory subclasses:" />
      <item value="Typical usage is registering all bean definitions first (possibly read from a bean definition file), before accessing beans. Bean definition lookup is therefore an inexpensive operation in a local bean definition table, operating on pre-built bean definition metadata objects." />
      <item value="a full-fledged bean factory based on bean definition objects." />
      <item value="Map from dependency type to corresponding autowired value" />
      <item value="MessageSource registered (and found for autowiring) as a bean." />
      <item value="BeanFactory interface not registered as resolvable type in a plain factory." />
      <item value="Configure the bean factory with context callbacks." />
      <item value="Initialize any placeholder property sources in the context environment" />
      <item value="performing" />
      <item value="setting its startup date and" />
      <item value="Tell the subclass to refresh the internal bean factory." />
      <item value="Prepare this context for refreshing." />
      <item value="jCj0ZniL8TB6tEiJtPTM" />
    </histories>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1649502348603" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20220409001165553" />
      </app-key>
    </option>
    <option name="translator" value="BAIDU" />
  </component>
</application>